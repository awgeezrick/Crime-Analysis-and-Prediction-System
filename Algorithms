Binary Search Algorithm
def BinarySearch (dicList, l, r, z): 
    if r >= l: 
        mid = l + (r - l)//2 
        if dicList[mid] == z: 
            return mid 
        elif dicList[mid] > z: 
            return BinarySearch(dicList, l, mid-1, z) 
        else: 
            return BinarySearch(dicList, mid + 1, r, z) 
    else: 
        return -1
     
     
Quik Sort Algorithm
def partition(sort_list, low, high):
    i = (low -1)
    pivot = sort_list[high]
    for j in range(low, high):
        if sort_list[j] <= pivot:
            i += 1
            sort_list[i], sort_list[j] = sort_list[j], sort_list[i]
    sort_list[i+1],sort_list[high] = sort_list[high], sort_list[i+1]
    return (i+1)
            
def quick_sort(sort_list, low, high):
    if low < high:
        pi = partition(sort_list, low, high)
        quick_sort(sort_list, low, pi-1)
        quick_sort(sort_list, pi+1, high)
    return sort_list
